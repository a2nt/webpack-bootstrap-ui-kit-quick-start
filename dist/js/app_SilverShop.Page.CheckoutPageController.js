!function(e){var o={};function t(s){if(o[s])return o[s].exports;var i=o[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=o,t.d=function(e,o,s){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var i in e)t.d(s,i,function(o){return e[o]}.bind(null,i));return s},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="/srv/dist/repositories/webpack-bootstrap-ui-kit-quick-start/dist",t(t.s="./src/js/types/SilverShop.Page.CheckoutPageController.js")}({"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/_ui.map.api.js":function(e,o,t){"use strict";var s=t("jquery"),i=t.n(s),a=t("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js"),n=t.n(a),r=(t("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/scss/_components/_ui.map.scss"),{ENVS:["xs","sm","md","lg","xl","xxl","xxxl"],MAP_DRIVER:t("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/drivers/_map.google.js").a});(e=>{const o="jsMapAPI",t=o,s=e("body"),i=r.MAP_DRIVER,a=window;class l{constructor(a){const r=new i;this.$el=e(a);const l=this.$el,d=l.data();d.center=[d.lng?d.lng:s.data("default-lng"),d.lat?d.lat:s.data("default-lat")],d["font-family"]=s.css("font-family"),console.log(`${o}: initializing ${r.getName()}...`),this.map=r.init(l,d),l.on(n.a.MAPLOADED,e=>{d.geojson?(console.log(`${o}: setting up geocode data`),r.addGeoJson(d)):d.address?(console.log(d.address),console.log(`${o}: setting up address marker`),r.geocode(d.address,e=>{console.log(e)})):d.lat&&d.lng&&(console.log(`${o}: setting up single lat/lng marker`),d.icon||(d.icon='<i class="fas fa-map-marker-alt"></i>'),r.addMarker([d.lng,d.lat],d)),console.log(`${o}: Map is loaded`)}),l.data(t,this),l.addClass(`${o}-active`)}getMap(){return ui.map}dispose(){this.$el=null,e.removeData(this.$el[0],t),this.$el.removeClass(`${o}-active`)}static _jQueryInterface(){if(void 0!==a.localStorage)return this.each((function(){const o=e(this);let s=o.data(t);s||(s=new l(this),o.data(t,s))}))}}e.fn[o]=l._jQueryInterface,e.fn[o].Constructor=l,e.fn[o].noConflict=function(){return e.fn[o]=JQUERY_NO_CONFLICT,l._jQueryInterface},e(a).on(`${n.a.AJAX} ${n.a.LOADED}`,()=>{e(".mapAPI-map-container").jsMapAPI()})})(i.a)},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/drivers/_map.google.js":function(e,o,t){"use strict";var s=t("jquery"),i=t.n(s),a=t("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js"),n=t.n(a);var r={init:()=>{class e extends google.maps.OverlayView{constructor(e){super();const o=this;o.setMap(e.map),o.position=e.position,o.html=e.html?e.html:'<div class="mapboxgl-marker"><i class="marker-icon fas fa-map-marker-alt"></i></div>',o.divClass=e.divClass,o.align=e.align,o.isDebugMode=e.debug,o.onClick=e.onClick,o.onMouseOver=e.onMouseOver,o.isBoolean=e=>"boolean"==typeof e,o.isNotUndefined=e=>void 0!==e,o.hasContent=e=>e.length>0,o.isString=e=>"string"==typeof e,o.isFunction=e=>"function"==typeof e}onAdd(){const e=this;e.div=document.createElement("div"),e.div.style.position="absolute",e.isNotUndefined(e.divClass)&&e.hasContent(e.divClass)&&(e.div.className=e.divClass),e.isNotUndefined(e.html)&&e.hasContent(e.html)&&e.isString(e.html)&&(e.div.innerHTML=e.html),e.isBoolean(e.isDebugMode)&&e.isDebugMode&&(e.div.className="debug-mode",e.div.innerHTML='<div style="height: 10px; width: 10px; background: red; border-radius: 100%;"></div><div style="position: absolute; top: 5px; padding: 5px; width: 130px; text-align: center; font-size: 18px; text-transform: uppercase; font-weight: bolder; background: red; color: white; font-family: Arial;">Debug mode</div>',e.div.setAttribute("style","position: absolute;border: 5px dashed red;height: 150px;width: 150px;display: flex;justify-content: center;align-items: center;")),e.getPanes().overlayMouseTarget.appendChild(e.div),google.maps.event.addDomListener(e.div,"click",o=>{google.maps.event.trigger(e,"click"),e.isFunction(e.onClick)&&e.onClick(),o.stopPropagation()}),google.maps.event.addDomListener(e.div,"mouseover",o=>{google.maps.event.trigger(e,"mouseover"),e.isFunction(e.onMouseOver)&&e.onMouseOver(),o.stopPropagation()})}draw(){const e=this;var o=e.getProjection().fromLatLngToDivPixel(new google.maps.LatLng(e.position)),t={y:void 0,x:void 0};switch(Array.isArray(e.align)?e.align.join(" "):""){case"left top":t.y=e.div.offsetHeight,t.x=e.div.offsetWidth;break;case"left center":t.y=e.div.offsetHeight/2,t.x=e.div.offsetWidth;break;case"left bottom":t.y=0,t.x=e.div.offsetWidth;break;case"center top":t.y=e.div.offsetHeight,t.x=e.div.offsetWidth/2;break;case"center center":t.y=e.div.offsetHeight/2,t.x=e.div.offsetWidth/2;break;case"center bottom":t.y=0,t.x=e.div.offsetWidth/2;break;case"right top":t.y=e.div.offsetHeight,t.x=0;break;case"right center":t.y=e.div.offsetHeight/2,t.x=0;break;case"right bottom":t.y=0,t.x=0;break;default:t.y=e.div.offsetHeight/2,t.x=e.div.offsetWidth/2}e.div.style.top=`${o.y-t.y}px`,e.div.style.left=`${o.x-t.x}px`}getPosition(){return this.position}getDiv(){return this.div}setPosition(e,o){this.position=e,this.align=o,this.draw()}}return e}};const l=(d=i.a,class{getName(){return"GoogleMapsDriver"}init(e,o=[]){const t=this,s=window;t.$el=e,t.config=o,t.markers=[],s[`init${t.getName()}`]=()=>{t.googleApiLoaded()},d("body").append(`<script async defer src="https://maps.googleapis.com/maps/api/js?key=${o.key}&callback=init${t.getName()}"><\/script>`)}googleApiLoaded(){const e=this,o=e.$el,t=e.config,s=o.find(".mapAPI-map"),i=t.mapZoom?t.mapZoom:10,a=t.center?{lat:t.center[1],lng:t.center[0]}:{lat:0,lng:0},l=t.style?t.style:null;console.log(`${e.getName()}: API is loaded`),e.MarkerUI=r.init(d),e.map=new google.maps.Map(s[0],{zoom:i,center:a,fullscreenControl:!0,styles:l}),e.default_zoom=i,s.addClass("mapboxgl-map"),e.popup=new e.MarkerUI({map:e.map,align:["center","top"],divClass:"mapboxgl-popup popup mapboxgl-popup-anchor-bottom d-none",html:'<div class="mapboxgl-popup-tip"></div><div class="mapboxgl-popup-content"><div class="mapboxgl-popup-close-button" type="button" aria-label="Close popup">Ã—</div><div class="html"></div></div>'}),e.geocoder=new google.maps.Geocoder,o.trigger(n.a.MAPLOADED)}addMarker(e,o){const t=this,s={lat:e[1],lng:e[0]},i=new t.MarkerUI({position:s,map:t.map,html:`<div class="mapboxgl-marker"><div id="Marker${o.id}" data-id="${o.id}" class="marker">${o.icon}</div></div>`,onClick:()=>{const e=d(`#Marker${o.id}`);t.showPopup(s,o.content),e.trigger(n.a.MAPMARKERCLICK)}});return t.markers.push(i),i}showPopup(e,o){const t=this,s=d(t.popup.getDiv());t.config.flyToMarker&&(t.map.setCenter(e),t.map.setZoom(18)),s.css({opacity:"0"}),s.removeClass("d-none"),t.popup.setPosition(e,["center","top"]),s.find(".mapboxgl-popup-content .html").html(o),s.find(".mapboxgl-popup-close-button").on("click",e=>{e.preventDefault(),t.hidePopup()}),s.css({"margin-left":"1rem",opacity:"1"})}hidePopup(){d(this.popup.getDiv()).addClass("d-none"),this.restoreBounds(),this.$el.trigger(n.a.MAPPOPUPCLOSE)}geocode(e,o){const t=this;t.geocoder.geocode({address:e},(e,s)=>{if("OK"===s)return"function"==typeof o&&o(e),e;console.error(`${t.getName()}: Geocode was not successful for the following reason: ${s}`)})}reverseGeocode(e,o){const t=this;t.geocoder.geocode({location:latlng},(e,s)=>{if("OK"===s)return"function"==typeof o&&o(e),e;console.error(`${t.getName()}: Reverse Geocoding was not successful for the following reason: ${s}`)})}addGeoJson(e){const o=this,t=(e.geojson.features[0].geometry.coordinates,new google.maps.LatLngBounds);e.geojson.features.forEach(s=>{const i=s.id,a=s.geometry.coordinates,n=s.properties.content;o.addMarker(a,{id:i,content:n,icon:s.icon,flyToMarker:e.flyToMarker}),t.extend({lat:a[1],lng:a[0]})}),o.map.fitBounds(t,{padding:30}),o.default_bounds=t,o.default_zoom=o.map.getZoom()}getMap(){return this.map}getPopup(){return this.popup}restoreBounds(){const e=this;e.default_bounds?e.map.fitBounds(e.default_bounds,{padding:30}):(e.markers[0]&&e.map.setCenter(e.markers[0].getPosition()),e.restoreZoom())}restoreZoom(){this.map.setZoom(this.default_zoom)}});var d;o.a=l},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js":function(e,o){e.exports={AJAX:"ajax-load",LOADED:"load",MAPLOADED:"map-loaded",MAPMARKERCLICK:"map-marker-click",MAPPOPUPCLOSE:"map-popup-close",SET_TARGET_UPDATE:"set-target-update",RESTORE_FIELD:"restore-field",FORM_INIT_BASICS:"form-basics",FORM_INIT_STEPPED:"form-init-stepped",FORM_INIT_VALIDATE:"form-init-validate",FORM_INIT_VALIDATE_FIELD:"form-init-validate-field",FORM_INIT_STORAGE:"form-init-storage",FORM_VALIDATION_FAILED:"form-validation-failed",FORM_STEPPED_NEW_STEP:"form-new-step",FORM_STEPPED_FIRST_STEP:"form-first-step",FORM_STEPPED_LAST_STEP:"form-last-step",FORM_FIELDS:"input,textarea,select"}},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/scss/_components/_ui.map.scss":function(e,o){},"./src/js/types/SilverShop.Page.CheckoutPageController.js":function(e,o,t){"use strict";t.r(o);t("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/_ui.map.api.js")},jquery:function(e,o){e.exports=jQuery}});
//# sourceMappingURL=app_SilverShop.Page.CheckoutPageController.js.map