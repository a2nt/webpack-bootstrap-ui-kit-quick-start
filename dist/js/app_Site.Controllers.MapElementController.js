!function(e){var t={};function o(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/srv/dist/repositories/webpack-bootstrap-ui-kit-quick-start/dist",o(o.s="./src/js/types/Site.Controllers.MapElementController.js")}({"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/_ui.map.api.js":function(e,t,o){"use strict";var i=o("jquery"),n=o.n(i),s=o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js"),a=o.n(s),r=(o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/scss/_components/_ui.map.scss"),{ENVS:["xs","sm","md","lg","xl","xxl","xxxl"],MAP_DRIVER:o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/drivers/_map.google.js").a});(e=>{const t="jsMapAPI",o=t,i=e("body"),n=r.MAP_DRIVER,s=window;class l{constructor(s){const r=new n;this.$el=e(s);const l=this.$el,p=l.data();p.center=[p.lng?p.lng:i.data("default-lng"),p.lat?p.lat:i.data("default-lat")],p["font-family"]=i.css("font-family"),console.log(`${t}: initializing ${r.getName()}...`),this.map=r.init(l,p),l.on(a.a.MAPLOADED,e=>{r.addGeoJson(p),console.log(`${t}: Map is loaded`)}),l.data(o,this),l.addClass(`${t}-active`)}getMap(){return ui.map}dispose(){this.$el=null,e.removeData(this.$el[0],o),this.$el.removeClass(`${t}-active`)}static _jQueryInterface(){if(void 0!==s.localStorage)return this.each((function(){const t=e(this);let i=t.data(o);i||(i=new l(this),t.data(o,i))}))}}e.fn[t]=l._jQueryInterface,e.fn[t].Constructor=l,e.fn[t].noConflict=function(){return e.fn[t]=JQUERY_NO_CONFLICT,l._jQueryInterface},e(s).on(`${a.a.AJAX} ${a.a.LOADED}`,()=>{e(".mapAPI-map-container").jsMapAPI()})})(n.a)},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/drivers/_map.google.js":function(e,t,o){"use strict";var i=o("jquery"),n=o.n(i),s=o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js"),a=o.n(s);var r={init:()=>{class e extends google.maps.OverlayView{constructor(e){super();const t=this;t.setMap(e.map),t.position=e.position,t.html=e.html?e.html:'<div class="mapboxgl-marker"><i class="marker-icon fas fa-map-marker-alt"></i></div>',t.divClass=e.divClass,t.align=e.align,t.isDebugMode=e.debug,t.onClick=e.onClick,t.onMouseOver=e.onMouseOver,t.isBoolean=e=>"boolean"==typeof e,t.isNotUndefined=e=>void 0!==e,t.hasContent=e=>e.length>0,t.isString=e=>"string"==typeof e,t.isFunction=e=>"function"==typeof e}onAdd(){const e=this;e.div=document.createElement("div"),e.div.style.position="absolute",e.isNotUndefined(e.divClass)&&e.hasContent(e.divClass)&&(e.div.className=e.divClass),e.isNotUndefined(e.html)&&e.hasContent(e.html)&&e.isString(e.html)&&(e.div.innerHTML=e.html),e.isBoolean(e.isDebugMode)&&e.isDebugMode&&(e.div.className="debug-mode",e.div.innerHTML='<div style="height: 10px; width: 10px; background: red; border-radius: 100%;"></div><div style="position: absolute; top: 5px; padding: 5px; width: 130px; text-align: center; font-size: 18px; text-transform: uppercase; font-weight: bolder; background: red; color: white; font-family: Arial;">Debug mode</div>',e.div.setAttribute("style","position: absolute;border: 5px dashed red;height: 150px;width: 150px;display: flex;justify-content: center;align-items: center;")),e.getPanes().overlayMouseTarget.appendChild(e.div),google.maps.event.addDomListener(e.div,"click",t=>{google.maps.event.trigger(e,"click"),e.isFunction(e.onClick)&&e.onClick(),t.stopPropagation()}),google.maps.event.addDomListener(e.div,"mouseover",t=>{google.maps.event.trigger(e,"mouseover"),e.isFunction(e.onMouseOver)&&e.onMouseOver(),t.stopPropagation()})}draw(){const e=this;var t=e.getProjection().fromLatLngToDivPixel(new google.maps.LatLng(e.position)),o={y:void 0,x:void 0};switch(Array.isArray(e.align)?e.align.join(" "):""){case"left top":o.y=e.div.offsetHeight,o.x=e.div.offsetWidth;break;case"left center":o.y=e.div.offsetHeight/2,o.x=e.div.offsetWidth;break;case"left bottom":o.y=0,o.x=e.div.offsetWidth;break;case"center top":o.y=e.div.offsetHeight,o.x=e.div.offsetWidth/2;break;case"center center":o.y=e.div.offsetHeight/2,o.x=e.div.offsetWidth/2;break;case"center bottom":o.y=0,o.x=e.div.offsetWidth/2;break;case"right top":o.y=e.div.offsetHeight,o.x=0;break;case"right center":o.y=e.div.offsetHeight/2,o.x=0;break;case"right bottom":o.y=0,o.x=0;break;default:o.y=e.div.offsetHeight/2,o.x=e.div.offsetWidth/2}e.div.style.top=`${t.y-o.y}px`,e.div.style.left=`${t.x-o.x}px`}getPosition(){return this.position}getDiv(){return this.div}setPosition(e,t){this.position=e,this.align=t,this.draw()}}return e}};const l=(p=n.a,class{getName(){return"GoogleMapsDriver"}init(e,t=[]){const o=this,i=window;o.$el=e,o.config=t,i[`init${o.getName()}`]=()=>{o.googleApiLoaded()},p("body").append(`<script async defer src="https://maps.googleapis.com/maps/api/js?key=${t.key}&callback=init${o.getName()}"><\/script>`)}googleApiLoaded(){const e=this,t=e.$el,o=e.config,i=t.find(".mapAPI-map"),n=o.mapZoom?o.mapZoom:10,s=o.center?{lat:o.center[1],lng:o.center[0]}:{lat:0,lng:0},l=o.style?o.style:null;console.log(`${e.getName()}: API is loaded`),e.MarkerUI=r.init(p),e.map=new google.maps.Map(i[0],{zoom:n,center:s,fullscreenControl:!0,styles:l}),e.default_zoom=n,i.addClass("mapboxgl-map"),e.popup=new e.MarkerUI({map:e.map,align:["center","top"],divClass:"mapboxgl-popup popup mapboxgl-popup-anchor-bottom d-none",html:'<div class="mapboxgl-popup-tip"></div><div class="mapboxgl-popup-content"><div class="mapboxgl-popup-close-button" type="button" aria-label="Close popup">Ã—</div><div class="html"></div></div>'}),t.trigger(a.a.MAPLOADED)}addMarker(e,t){const o=this,i={lat:e[1],lng:e[0]};return new o.MarkerUI({position:i,map:o.map,html:`<div class="mapboxgl-marker"><div id="Marker${t.id}" data-id="${t.id}" class="marker">${t.icon}</div></div>`,onClick:()=>{const e=p(`#Marker${t.id}`);o.showPopup(i,t.content),e.trigger(a.a.MAPMARKERCLICK)}})}showPopup(e,t){const o=this,i=p(o.popup.getDiv());o.config.flyToMarker&&(o.map.setCenter(e),o.map.setZoom(18)),i.css({opacity:"0"}),i.removeClass("d-none"),o.popup.setPosition(e,["center","top"]),i.find(".mapboxgl-popup-content .html").html(t),i.find(".mapboxgl-popup-close-button").on("click",e=>{e.preventDefault(),o.hidePopup()}),i.css({"margin-left":"1rem",opacity:"1"})}hidePopup(){p(this.popup.getDiv()).addClass("d-none"),this.restoreBounds(),this.$el.trigger(a.a.MAPPOPUPCLOSE)}addGeoJson(e){const t=this,o=(e.geojson.features[0].geometry.coordinates,new google.maps.LatLngBounds);e.geojson.features.forEach(i=>{const n=i.id,s=i.geometry.coordinates,a=i.properties.content;t.addMarker(s,{id:n,content:a,icon:i.icon,flyToMarker:e.flyToMarker}),o.extend({lat:s[1],lng:s[0]})}),t.map.fitBounds(o,{padding:30}),t.default_bounds=o,t.default_zoom=t.map.getZoom()}getMap(){return this.map}getPopup(){return this.popup}restoreBounds(){this.map.fitBounds(this.default_bounds,{padding:30})}restoreZoom(){this.map.setZoom(this.default_zoom)}});var p;t.a=l},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js":function(e,t){e.exports={AJAX:"ajax-load",LOADED:"load",MAPLOADED:"map-loaded",MAPMARKERCLICK:"map-marker-click",MAPPOPUPCLOSE:"map-popup-close",SET_TARGET_UPDATE:"set-target-update",RESTORE_FIELD:"restore-field",FORM_INIT_BASICS:"form-basics",FORM_INIT_STEPPED:"form-init-stepped",FORM_INIT_VALIDATE:"form-init-validate",FORM_INIT_VALIDATE_FIELD:"form-init-validate-field",FORM_INIT_STORAGE:"form-init-storage",FORM_VALIDATION_FAILED:"form-validation-failed",FORM_STEPPED_NEW_STEP:"form-new-step",FORM_STEPPED_FIRST_STEP:"form-first-step",FORM_STEPPED_LAST_STEP:"form-last-step",FORM_FIELDS:"input,textarea,select"}},"./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/scss/_components/_ui.map.scss":function(e,t){},"./src/js/types/Site.Controllers.MapElementController.js":function(e,t,o){"use strict";o.r(t);var i=o("jquery"),n=o.n(i),s=o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_events.js"),a=o.n(s),r=(o("./node_modules/@a2nt/ss-bootstrap-ui-webpack-boilerplate/src/js/_components/_ui.map.api.js"),function(){function e(e,t){for(var o=0;o<t.length;o++){var i=t[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,o,i){return o&&e(t.prototype,o),i&&e(t,i),t}}());var l=function(e){var t=window,o=(document,e("body")),i=function(){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t)}return r(t,null,[{key:"init",value:function(){this.dispose(),console.log("Initializing: LocationUI")}},{key:"initMap",value:function(){e(".mapAPI-map-container").find(".marker").on(""+a.a.MAPMARKERCLICK,(function(t){var i=e(t.currentTarget).data("id");o.find(".locations .location").removeClass("active"),o.find('.locations .location[data-id="'+i+'"]').addClass("active")})),o.find(".locations .location").on("click",(function(t){var i=e(t.currentTarget).data("id");o.find("#Marker"+i).click()})),e(".mapAPI-map-container").on(a.a.MAPPOPUPCLOSE,(function(e){o.find(".locations .location").removeClass("active")}))}},{key:"dispose",value:function(){console.log("Destroying: LocationUI")}}]),t}();return e(t).on(a.a.AJAX+" "+a.a.LOADED,(function(){i.init()})),e(t).on(a.a.MAPLOADED,(function(){i.initMap()})),i}(n.a);t.default=l},jquery:function(e,t){e.exports=jQuery}});
//# sourceMappingURL=app_Site.Controllers.MapElementController.js.map